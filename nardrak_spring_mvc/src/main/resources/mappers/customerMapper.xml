<?xml version="1.0" encoding="UTF-8"?>

<!DOCTYPE mapper
    PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
    "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
    
	<mapper namespace="com.spring.nardrak_mvc.dao.CustomerDAO">  <!-- namespace="패키지명.인터페이스" -->
		<!--  아이디, 패스워드 일치   -->
		<select id="userIdPwdChk" parameterType="java.util.Map" resultType="int"> 
			SELECT COUNT(*)
			  FROM customer_tb
			 WHERE cs_id=#{strId} AND cs_pwd=#{strPwd} AND login_session='Customer' AND delete_status='N'
 		</select>
			 
		<!-- ID 중복확인 처리 -->
	   	<select id="useridCheck" parameterType="String" resultType="int">
		SELECT COUNT(*) 
		  FROM (SELECT cs_id FROM customer_tb
		  		UNION
		  		SELECT ad_id FROM admin_tb 	
		  ) a
		 WHERE cs_id = #{strId}
 		</select>
 		
 		<!-- 전화번호 중복확인 처리 -->
 		<select id="phoneCheck" parameterType="java.util.Map" resultType="int">
 			SELECT count(*)
 			  FROM customer_tb
 			 WHERE cs_phone = #{value}
 		</select>
 		
 		<!-- 이메일 중복확인 처리 -->
 		<select id="emailCheck" parameterType="java.util.Map" resultType="int">
 			SELECT count(*)
 			  FROM customer_tb
 			 WHERE cs_email = #{value}
 		</select>
	      
	    <!-- 회원가입 처리 -->
		<insert id="insertCustomer" parameterType="com.spring.nardrak_mvc.dto.CustomerDTO" >
		  INSERT INTO customer_tb(cs_id, cs_pwd, cs_name, cs_gender, cs_birth, cs_phone, cs_zip, cs_email, cs_tel, cs_user_num, cs_regDate, cs_terms, delete_status, login_session)
			 VALUES(#{cs_id},#{cs_pwd},#{cs_name},#{cs_gender},#{cs_birth},#{cs_phone},#{cs_zip},#{cs_email},#{cs_tel}, TO_CHAR((SELECT NVL(MAX(cs_user_num)+1,1) FROM customer_tb)), #{cs_regDate}, #{cs_terms}, DEFAULT, 'Customer')
		</insert>
		
	   <!-- 회원정보 수정처리 -->
		<update id="updateCustomer" parameterType="com.spring.nardrak_mvc.dto.CustomerDTO">
			UPDATE customer_tb
				SET cs_pwd= #{cs_pwd}
				,cs_name= #{cs_name}
				,cs_gender= #{cs_gender}
				,cs_birth= #{cs_birth}
				,cs_zip= #{cs_zip}
				,cs_phone= #{cs_phone}
				,cs_tel= #{cs_tel}
				,cs_email= #{cs_email}
				,cs_regDate= #{cs_regDate}
				WHERE cs_id= #{cs_id}
		</update>
		
		<!-- 회원정보 탈퇴 정보 처리 -->
		<insert id="deleteCustomer" parameterType="com.spring.nardrak_mvc.dto.CustomerDeleteDTO">
		INSERT INTO customer_delete_tb(cs_del_num, cs_id, cs_del_terms, cs_drCode, cs_etc_cmmt, cs_del_date)
			VALUES(TO_CHAR((SELECT NVL(MAX(cs_del_num)+1,1)FROM customer_delete_tb)), #{cs_id}, #{cs_del_terms}, #{cs_drCode}, #{cs_etc_cmmt}, sysdate) 
    	</insert>
    	
    	<!-- 회원정보 탈퇴 정보 처리 후, 고객 테이블에서 해당 회원 삭제 -->
    	<update id="deleteCustomerRemove" parameterType="String">
       		UPDATE customer_tb 
       		SET delete_status = 'Y' 
       		WHERE cs_id = #{strId}
    	</update>
    	
    	<!-- 1:1 문의 등록 처리 -->
    	<insert id="insertInquiry" parameterType="com.spring.nardrak_mvc.dto.InquiryDTO">
    	INSERT INTO inquiryCS_tb(i_num, i_title, i_category, i_content, i_imgUpload, i_writeDate, cs_id)
			VALUES (RAWTOHEX(SYS_GUID()),#{i_title}, #{i_category}, #{i_content}, #{i_imgUpload}, DEFAULT, #{cs_id})
    	</insert>
    
   </mapper> 